{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,0CAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKR,OAAO,+BAAQJ,IAqBFU,E,uKAjBH,IAAD,EACoCC,KAAKZ,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBAEvB,OACE,6BACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACER,cAAeA,EACfQ,gBAAiBA,U,GAVTG,a,OCuBLC,E,kDAjDb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAURe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,KAfO,EAmBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAClBhB,KAAM,GACNC,IAAK,IAGP,EAAKc,MAAQ,EAAKC,aARD,E,qDAwBT,IAAD,EACeX,KAAKU,MAAnBf,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,uCACA,2BACEgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eAEjB,sCACA,2BACES,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eAEjB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GA5CvCP,aCuCJa,E,4MApCbJ,MAAQ,CACNK,WAAY,I,EAkBdjB,gBAAkB,SAAAL,GAAU,IAClBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKnBgB,aAAe,SAAAQ,GACb,EAAKV,SAAS,CACZQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,uDA3BjC,IACAF,EAAef,KAAKU,MAApBK,WAER,OACE,yBAAKI,UAAU,aACb,6CACA,kBAAC,EAAD,CACE7B,cAAeyB,EACfjB,gBAAiBE,KAAKF,kBAExB,kBAAC,EAAD,CAAMW,aAAcT,KAAKS,oB,GAffR,a,MCClBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.841fbed2.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = props => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n  render() {\n    const { characterData, removeCharacter } = this.props\n\n    return (\n      <div>\n        <table>\n          <TableHeader />\n          <TableBody\n            characterData={characterData}\n            removeCharacter={removeCharacter}\n          />\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Table\n","import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      name: '',\n      job: ''\n    }\n\n    this.state = this.initialState\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { name, job } = this.state\n\n    return (\n      <form>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label>Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    )\n  }\n}\n\nexport default Form\n","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    characters: []\n  }\n\n  render() {\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <h1>Hello, Peter!</h1>\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n\n  removeCharacter = index => {\n    const { characters } = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = character => {\n    this.setState({\n      characters: [...this.state.characters, character]\n    })\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}